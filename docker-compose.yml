version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: mystic_shorts_yt_db
    environment:
      POSTGRES_DB: mystic_shorts_yt
      POSTGRES_USER: mystic_user
      POSTGRES_PASSWORD: mystic_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis (for caching and background tasks)
  redis:
    image: redis:7-alpine
    container_name: mystic_shorts_yt_redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Backend API
  backend:
    build: ./backend
    container_name: mystic_shorts_yt_backend
    environment:
      - DATABASE_URL=postgresql://mystic_user:mystic_password@postgres:5432/mystic_shorts_yt
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
      - temp_data:/app/temp
      - logs_data:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build: ./frontend
    container_name: mystic_shorts_yt_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx (reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: mystic_shorts_yt_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  uploads_data:
  temp_data:
  logs_data:
