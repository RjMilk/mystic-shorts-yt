#!/usr/bin/env bash
set -euo pipefail

# ---------- helpers ----------
fail() { echo "‚ùå $*" >&2; exit 1; }
note() { echo "üëâ $*"; }

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–∞–ª–æ–≥, –≥–¥–µ –ª–µ–∂–∏—Ç —Å–∞–º —Å–∫—Ä–∏–ø—Ç (—Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –∏–∑ Xcode, –∏ –∏–∑ Terminal)
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR" || fail "–ù–µ –º–æ–≥—É –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ —Å–∫—Ä–∏–ø—Ç–∞: $SCRIPT_DIR"

echo "üçé –°–±–æ—Ä–∫–∞ Mystic Shorts YT –¥–ª—è macOS..."
echo "======================================"
echo "üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $SCRIPT_DIR"

# ---------- –±–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ ----------
[[ "$OSTYPE" == darwin* ]] || fail "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è macOS"

command -v node >/dev/null 2>&1 || fail "Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏ —Å https://nodejs.org/"
command -v python3 >/dev/null 2>&1 || fail "Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏ —Å https://www.python.org/"

echo "‚úÖ Node.js –∏ Python –Ω–∞–π–¥–µ–Ω—ã: node=$(node -v), npm=$(npm -v), python=$(python3 --version)"

# ---------- –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ ----------
[[ -d backend ]]      || fail "–ü–∞–ø–∫–∞ backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ $SCRIPT_DIR"
[[ -d frontend ]]     || fail "–ü–∞–ø–∫–∞ frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ $SCRIPT_DIR"
[[ -d electron-app ]] || fail "–ü–∞–ø–∫–∞ electron-app –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ $SCRIPT_DIR"

# ---------- BACKEND ----------
echo "üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python backend..."
pushd backend >/dev/null

# venv
if [[ ! -d .venv ]]; then
  echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è (.venv)..."
  python3 -m venv .venv
fi
# shellcheck disable=SC1091
source .venv/bin/activate

echo "‚¨ÜÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
python -m pip install -U pip

if [[ -f requirements.txt ]]; then
  echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend –∏–∑ requirements.txt..."
  pip install -r requirements.txt
else
  note "requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend"
fi

# .env
if [[ ! -f .env ]]; then
  echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ backend/.env..."
  cat > .env << 'EOF'
DATABASE_URL=sqlite:///./mystic_shorts_yt.db
TELEGRAM_BOT_TOKEN=
TELEGRAM_CHAT_ID=
YOUTUBE_API_KEY=
YOUTUBE_CLIENT_ID=
YOUTUBE_CLIENT_SECRET=
CAPTCHA_API_KEY=
CAPTCHA_SERVICE=2captcha
SECRET_KEY=mystic-secret-key-change-in-production
ACCESS_TOKEN_EXPIRE_MINUTES=30
LOG_LEVEL=INFO
UPLOAD_FOLDER=uploads
TEMP_FOLDER=temp
EOF
fi

mkdir -p uploads temp logs
deactivate
popd >/dev/null

# ---------- FRONTEND ----------
echo "‚öõÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ React frontend..."
pushd frontend >/dev/null

[[ -f package.json ]] || fail "frontend/package.json –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"

# –µ—Å–ª–∏ –µ—Å—Ç—å lock ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º npm ci, –∏–Ω–∞—á–µ npm install
if [[ -f package-lock.json ]]; then
  echo "üì• npm ci (frontend)..."
  npm ci
else
  echo "üì• npm install (frontend)..."
  npm install
fi

echo "üî® –°–±–æ—Ä–∫–∞ frontend..."
npm run build
popd >/dev/null

# ---------- ELECTRON ----------
echo "‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Electron –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
pushd electron-app >/dev/null

[[ -f package.json ]] || fail "electron-app/package.json –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ electron-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –º–µ—Å—Ç–µ"

if [[ -f package-lock.json ]]; then
  echo "üì• npm ci (electron)..."
  npm ci
else
  echo "üì• npm install (electron)..."
  npm install
fi

# –µ—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç build:mac ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ, –∏–Ω–∞—á–µ –æ–±—ã—á–Ω—ã–π build
if npm run | grep -q "build:mac"; then
  echo "üì¶ –°–±–æ—Ä–∫–∞ macOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (npm run build:mac)..."
  npm run build:mac
else
  echo "üì¶ –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (npm run build)..."
  npm run build
fi
popd >/dev/null

echo ""
echo "üéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "==================="
echo "üìÅ –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Å–º–æ—Ç—Ä–∏ –≤ electron-app/dist/"
echo "‚ÑπÔ∏è  –ò–º—è DMG/ZIP –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ package.json"
